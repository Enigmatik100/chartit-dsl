/*
 * generated by Xtext 2.25.0
 */
grammar InternalChartDsl;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package fr.unice.cotedazur.l3ia2023.mycs.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package fr.unice.cotedazur.l3ia2023.mycs.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import fr.unice.cotedazur.l3ia2023.mycs.services.ChartDslGrammarAccess;

}
@parser::members {
	private ChartDslGrammarAccess grammarAccess;

	public void setGrammarAccess(ChartDslGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleConstant
entryRuleConstant
:
{ before(grammarAccess.getConstantRule()); }
	 ruleConstant
{ after(grammarAccess.getConstantRule()); } 
	 EOF 
;

// Rule Constant
ruleConstant 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConstantAccess().getAlternatives()); }
		(rule__Constant__Alternatives)
		{ after(grammarAccess.getConstantAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEString
entryRuleEString
:
{ before(grammarAccess.getEStringRule()); }
	 ruleEString
{ after(grammarAccess.getEStringRule()); } 
	 EOF 
;

// Rule EString
ruleEString 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEStringAccess().getAlternatives()); }
		(rule__EString__Alternatives)
		{ after(grammarAccess.getEStringAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleChart
entryRuleChart
:
{ before(grammarAccess.getChartRule()); }
	 ruleChart
{ after(grammarAccess.getChartRule()); } 
	 EOF 
;

// Rule Chart
ruleChart 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getChartAccess().getGroup()); }
		(rule__Chart__Group__0)
		{ after(grammarAccess.getChartAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDataFile
entryRuleDataFile
:
{ before(grammarAccess.getDataFileRule()); }
	 ruleDataFile
{ after(grammarAccess.getDataFileRule()); } 
	 EOF 
;

// Rule DataFile
ruleDataFile 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDataFileAccess().getGroup()); }
		(rule__DataFile__Group__0)
		{ after(grammarAccess.getDataFileAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumnRef
entryRuleColumnRef
:
{ before(grammarAccess.getColumnRefRule()); }
	 ruleColumnRef
{ after(grammarAccess.getColumnRefRule()); } 
	 EOF 
;

// Rule ColumnRef
ruleColumnRef 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnRefAccess().getMakeRefToAssignment()); }
		(rule__ColumnRef__MakeRefToAssignment)
		{ after(grammarAccess.getColumnRefAccess().getMakeRefToAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCondition
entryRuleCondition
:
{ before(grammarAccess.getConditionRule()); }
	 ruleCondition
{ after(grammarAccess.getConditionRule()); } 
	 EOF 
;

// Rule Condition
ruleCondition 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getConditionAccess().getGroup()); }
		(rule__Condition__Group__0)
		{ after(grammarAccess.getConditionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleColumn
entryRuleColumn
:
{ before(grammarAccess.getColumnRule()); }
	 ruleColumn
{ after(grammarAccess.getColumnRule()); } 
	 EOF 
;

// Rule Column
ruleColumn 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getColumnAccess().getGroup()); }
		(rule__Column__Group__0)
		{ after(grammarAccess.getColumnAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEInt
entryRuleEInt
:
{ before(grammarAccess.getEIntRule()); }
	 ruleEInt
{ after(grammarAccess.getEIntRule()); } 
	 EOF 
;

// Rule EInt
ruleEInt 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEIntAccess().getGroup()); }
		(rule__EInt__Group__0)
		{ after(grammarAccess.getEIntAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleIntVariable
entryRuleIntVariable
:
{ before(grammarAccess.getIntVariableRule()); }
	 ruleIntVariable
{ after(grammarAccess.getIntVariableRule()); } 
	 EOF 
;

// Rule IntVariable
ruleIntVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getIntVariableAccess().getGroup()); }
		(rule__IntVariable__Group__0)
		{ after(grammarAccess.getIntVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleStringVariable
entryRuleStringVariable
:
{ before(grammarAccess.getStringVariableRule()); }
	 ruleStringVariable
{ after(grammarAccess.getStringVariableRule()); } 
	 EOF 
;

// Rule StringVariable
ruleStringVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getStringVariableAccess().getGroup()); }
		(rule__StringVariable__Group__0)
		{ after(grammarAccess.getStringVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleDoubleVariable
entryRuleDoubleVariable
:
{ before(grammarAccess.getDoubleVariableRule()); }
	 ruleDoubleVariable
{ after(grammarAccess.getDoubleVariableRule()); } 
	 EOF 
;

// Rule DoubleVariable
ruleDoubleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getDoubleVariableAccess().getGroup()); }
		(rule__DoubleVariable__Group__0)
		{ after(grammarAccess.getDoubleVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEDouble
entryRuleEDouble
:
{ before(grammarAccess.getEDoubleRule()); }
	 ruleEDouble
{ after(grammarAccess.getEDoubleRule()); } 
	 EOF 
;

// Rule EDouble
ruleEDouble 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEDoubleAccess().getGroup()); }
		(rule__EDouble__Group__0)
		{ after(grammarAccess.getEDoubleAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleEBoolean
entryRuleEBoolean
:
{ before(grammarAccess.getEBooleanRule()); }
	 ruleEBoolean
{ after(grammarAccess.getEBooleanRule()); } 
	 EOF 
;

// Rule EBoolean
ruleEBoolean 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getEBooleanAccess().getAlternatives()); }
		(rule__EBoolean__Alternatives)
		{ after(grammarAccess.getEBooleanAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule ChartType
ruleChartType
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartTypeAccess().getAlternatives()); }
		(rule__ChartType__Alternatives)
		{ after(grammarAccess.getChartTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Rule CompOperator
ruleCompOperator
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOperatorAccess().getAlternatives()); }
		(rule__CompOperator__Alternatives)
		{ after(grammarAccess.getCompOperatorAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Constant__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConstantAccess().getIntVariableParserRuleCall_0()); }
		ruleIntVariable
		{ after(grammarAccess.getConstantAccess().getIntVariableParserRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getStringVariableParserRuleCall_1()); }
		ruleStringVariable
		{ after(grammarAccess.getConstantAccess().getStringVariableParserRuleCall_1()); }
	)
	|
	(
		{ before(grammarAccess.getConstantAccess().getDoubleVariableParserRuleCall_2()); }
		ruleDoubleVariable
		{ after(grammarAccess.getConstantAccess().getDoubleVariableParserRuleCall_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EString__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
		RULE_STRING
		{ after(grammarAccess.getEStringAccess().getSTRINGTerminalRuleCall_0()); }
	)
	|
	(
		{ before(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
		RULE_ID
		{ after(grammarAccess.getEStringAccess().getIDTerminalRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Alternatives_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
		'E'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
		'e'
		{ after(grammarAccess.getEDoubleAccess().getEKeyword_4_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__EBoolean__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
		'true'
		{ after(grammarAccess.getEBooleanAccess().getTrueKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
		'false'
		{ after(grammarAccess.getEBooleanAccess().getFalseKeyword_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ChartType__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartTypeAccess().getBAREnumLiteralDeclaration_0()); }
		('BAR')
		{ after(grammarAccess.getChartTypeAccess().getBAREnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getPIEEnumLiteralDeclaration_1()); }
		('PIE')
		{ after(grammarAccess.getChartTypeAccess().getPIEEnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getSCATTEREnumLiteralDeclaration_2()); }
		('SCATTER')
		{ after(grammarAccess.getChartTypeAccess().getSCATTEREnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getLINEEnumLiteralDeclaration_3()); }
		('LINE')
		{ after(grammarAccess.getChartTypeAccess().getLINEEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getMIXEDEnumLiteralDeclaration_4()); }
		('MIXED')
		{ after(grammarAccess.getChartTypeAccess().getMIXEDEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getBUBBLEEnumLiteralDeclaration_5()); }
		('BUBBLE')
		{ after(grammarAccess.getChartTypeAccess().getBUBBLEEnumLiteralDeclaration_5()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getRADAREnumLiteralDeclaration_6()); }
		('RADAR')
		{ after(grammarAccess.getChartTypeAccess().getRADAREnumLiteralDeclaration_6()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getAREAEnumLiteralDeclaration_7()); }
		('AREA')
		{ after(grammarAccess.getChartTypeAccess().getAREAEnumLiteralDeclaration_7()); }
	)
	|
	(
		{ before(grammarAccess.getChartTypeAccess().getDONUTEnumLiteralDeclaration_8()); }
		('DONUT')
		{ after(grammarAccess.getChartTypeAccess().getDONUTEnumLiteralDeclaration_8()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__CompOperator__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCompOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
		('==')
		{ after(grammarAccess.getCompOperatorAccess().getEQUALEnumLiteralDeclaration_0()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
		('>')
		{ after(grammarAccess.getCompOperatorAccess().getGREATEREnumLiteralDeclaration_1()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getLESSEnumLiteralDeclaration_2()); }
		('<')
		{ after(grammarAccess.getCompOperatorAccess().getLESSEnumLiteralDeclaration_2()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_3()); }
		('!=')
		{ after(grammarAccess.getCompOperatorAccess().getNOT_EQUALEnumLiteralDeclaration_3()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_4()); }
		('>=')
		{ after(grammarAccess.getCompOperatorAccess().getGREATER_OR_EQUALEnumLiteralDeclaration_4()); }
	)
	|
	(
		{ before(grammarAccess.getCompOperatorAccess().getLESS_OR_EQUALEnumLiteralDeclaration_5()); }
		('<=')
		{ after(grammarAccess.getCompOperatorAccess().getLESS_OR_EQUALEnumLiteralDeclaration_5()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getCsvFileAssignment_0()); }
	(rule__Program__CsvFileAssignment_0)
	{ after(grammarAccess.getProgramAccess().getCsvFileAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getChartAssignment_1()); }
	(rule__Program__ChartAssignment_1)
	{ after(grammarAccess.getProgramAccess().getChartAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getChartAssignment_2()); }
	(rule__Program__ChartAssignment_2)*
	{ after(grammarAccess.getProgramAccess().getChartAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__0__Impl
	rule__Chart__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getChartAction_0()); }
	()
	{ after(grammarAccess.getChartAccess().getChartAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__1__Impl
	rule__Chart__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getChartKeyword_1()); }
	'Chart'
	{ after(grammarAccess.getChartAccess().getChartKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__2__Impl
	rule__Chart__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getLeftCurlyBracketKeyword_2()); }
	'{'
	{ after(grammarAccess.getChartAccess().getLeftCurlyBracketKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__3__Impl
	rule__Chart__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getGroup_3()); }
	(rule__Chart__Group_3__0)?
	{ after(grammarAccess.getChartAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__4__Impl
	rule__Chart__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getGroup_4()); }
	(rule__Chart__Group_4__0)?
	{ after(grammarAccess.getChartAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__5__Impl
	rule__Chart__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getGroup_5()); }
	(rule__Chart__Group_5__0)?
	{ after(grammarAccess.getChartAccess().getGroup_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__6__Impl
	rule__Chart__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getGroup_6()); }
	(rule__Chart__Group_6__0)?
	{ after(grammarAccess.getChartAccess().getGroup_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__7__Impl
	rule__Chart__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getGroup_7()); }
	(rule__Chart__Group_7__0)?
	{ after(grammarAccess.getChartAccess().getGroup_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getRightCurlyBracketKeyword_8()); }
	'}'
	{ after(grammarAccess.getChartAccess().getRightCurlyBracketKeyword_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_3__0__Impl
	rule__Chart__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getTitleKeyword_3_0()); }
	'title:'
	{ after(grammarAccess.getChartAccess().getTitleKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getTitleAssignment_3_1()); }
	(rule__Chart__TitleAssignment_3_1)
	{ after(grammarAccess.getChartAccess().getTitleAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_4__0__Impl
	rule__Chart__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getTypeKeyword_4_0()); }
	'type:'
	{ after(grammarAccess.getChartAccess().getTypeKeyword_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getTypeAssignment_4_1()); }
	(rule__Chart__TypeAssignment_4_1)
	{ after(grammarAccess.getChartAccess().getTypeAssignment_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group_5__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_5__0__Impl
	rule__Chart__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_5__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getXAxisKeyword_5_0()); }
	'xAxis:'
	{ after(grammarAccess.getChartAccess().getXAxisKeyword_5_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_5__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_5__1__Impl
	rule__Chart__Group_5__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_5__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getXVariableAssignment_5_1()); }
	(rule__Chart__XVariableAssignment_5_1)
	{ after(grammarAccess.getChartAccess().getXVariableAssignment_5_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_5__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_5__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_5__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getXVariableAssignment_5_2()); }
	(rule__Chart__XVariableAssignment_5_2)*
	{ after(grammarAccess.getChartAccess().getXVariableAssignment_5_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group_6__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_6__0__Impl
	rule__Chart__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_6__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getYAxisKeyword_6_0()); }
	'yAxis:'
	{ after(grammarAccess.getChartAccess().getYAxisKeyword_6_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_6__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_6__1__Impl
	rule__Chart__Group_6__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_6__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getYVariableAssignment_6_1()); }
	(rule__Chart__YVariableAssignment_6_1)
	{ after(grammarAccess.getChartAccess().getYVariableAssignment_6_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_6__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_6__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_6__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getYVariableAssignment_6_2()); }
	(rule__Chart__YVariableAssignment_6_2)*
	{ after(grammarAccess.getChartAccess().getYVariableAssignment_6_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Chart__Group_7__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_7__0__Impl
	rule__Chart__Group_7__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_7__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getFilterKeyword_7_0()); }
	'Filter:'
	{ after(grammarAccess.getChartAccess().getFilterKeyword_7_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_7__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_7__1__Impl
	rule__Chart__Group_7__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_7__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getFilterAssignment_7_1()); }
	(rule__Chart__FilterAssignment_7_1)
	{ after(grammarAccess.getChartAccess().getFilterAssignment_7_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_7__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Chart__Group_7__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__Group_7__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getChartAccess().getFilterAssignment_7_2()); }
	(rule__Chart__FilterAssignment_7_2)*
	{ after(grammarAccess.getChartAccess().getFilterAssignment_7_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFile__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__0__Impl
	rule__DataFile__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getGroup_0()); }
	(rule__DataFile__Group_0__0)?
	{ after(grammarAccess.getDataFileAccess().getGroup_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__1__Impl
	rule__DataFile__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getGroup_1()); }
	(rule__DataFile__Group_1__0)?
	{ after(grammarAccess.getDataFileAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__2__Impl
	rule__DataFile__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getGroup_2()); }
	(rule__DataFile__Group_2__0)?
	{ after(grammarAccess.getDataFileAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__3__Impl
	rule__DataFile__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getGroup_3()); }
	(rule__DataFile__Group_3__0)?
	{ after(grammarAccess.getDataFileAccess().getGroup_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__4__Impl
	rule__DataFile__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getSelectKeyword_4()); }
	'Select'
	{ after(grammarAccess.getDataFileAccess().getSelectKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__5__Impl
	rule__DataFile__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getColumnsKeyword_5()); }
	'Columns'
	{ after(grammarAccess.getDataFileAccess().getColumnsKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__6__Impl
	rule__DataFile__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getLeftSquareBracketKeyword_6()); }
	'['
	{ after(grammarAccess.getDataFileAccess().getLeftSquareBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__7
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__7__Impl
	rule__DataFile__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__7__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getUsedColumnAssignment_7()); }
	(rule__DataFile__UsedColumnAssignment_7)
	{ after(grammarAccess.getDataFileAccess().getUsedColumnAssignment_7()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__8
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__8__Impl
	rule__DataFile__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__8__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getGroup_8()); }
	(rule__DataFile__Group_8__0)*
	{ after(grammarAccess.getDataFileAccess().getGroup_8()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__9
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group__9__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getRightSquareBracketKeyword_9()); }
	']'
	{ after(grammarAccess.getDataFileAccess().getRightSquareBracketKeyword_9()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFile__Group_0__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_0__0__Impl
	rule__DataFile__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_0__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getLoadKeyword_0_0()); }
	'Load'
	{ after(grammarAccess.getDataFileAccess().getLoadKeyword_0_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_0__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_0__1__Impl
	rule__DataFile__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_0__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getDataKeyword_0_1()); }
	'data'
	{ after(grammarAccess.getDataFileAccess().getDataKeyword_0_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_0__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_0__2__Impl
	rule__DataFile__Group_0__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_0__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getFromKeyword_0_2()); }
	'from'
	{ after(grammarAccess.getDataFileAccess().getFromKeyword_0_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_0__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_0__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_0__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getFilePathAssignment_0_3()); }
	(rule__DataFile__FilePathAssignment_0_3)
	{ after(grammarAccess.getDataFileAccess().getFilePathAssignment_0_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFile__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_1__0__Impl
	rule__DataFile__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getHeaderKeyword_1_0()); }
	'header'
	{ after(grammarAccess.getDataFileAccess().getHeaderKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getHasHeaderAssignment_1_1()); }
	(rule__DataFile__HasHeaderAssignment_1_1)
	{ after(grammarAccess.getDataFileAccess().getHasHeaderAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFile__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_2__0__Impl
	rule__DataFile__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getTypesKeyword_2_0()); }
	'types'
	{ after(grammarAccess.getDataFileAccess().getTypesKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getHasTypeAssignment_2_1()); }
	(rule__DataFile__HasTypeAssignment_2_1)
	{ after(grammarAccess.getDataFileAccess().getHasTypeAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFile__Group_3__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_3__0__Impl
	rule__DataFile__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_3__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getDelimiterKeyword_3_0()); }
	'delimiter'
	{ after(grammarAccess.getDataFileAccess().getDelimiterKeyword_3_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_3__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_3__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getSeparatorAssignment_3_1()); }
	(rule__DataFile__SeparatorAssignment_3_1)
	{ after(grammarAccess.getDataFileAccess().getSeparatorAssignment_3_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DataFile__Group_8__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_8__0__Impl
	rule__DataFile__Group_8__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_8__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getCommaKeyword_8_0()); }
	','
	{ after(grammarAccess.getDataFileAccess().getCommaKeyword_8_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_8__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DataFile__Group_8__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__Group_8__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDataFileAccess().getUsedColumnAssignment_8_1()); }
	(rule__DataFile__UsedColumnAssignment_8_1)
	{ after(grammarAccess.getDataFileAccess().getUsedColumnAssignment_8_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Condition__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__0__Impl
	rule__Condition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getLeftElementAssignment_0()); }
	(rule__Condition__LeftElementAssignment_0)
	{ after(grammarAccess.getConditionAccess().getLeftElementAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__1__Impl
	rule__Condition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getOperatorAssignment_1()); }
	(rule__Condition__OperatorAssignment_1)?
	{ after(grammarAccess.getConditionAccess().getOperatorAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Condition__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getConditionAccess().getRightElementAssignment_2()); }
	(rule__Condition__RightElementAssignment_2)
	{ after(grammarAccess.getConditionAccess().getRightElementAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__0__Impl
	rule__Column__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getColumnAction_0()); }
	()
	{ after(grammarAccess.getColumnAccess().getColumnAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__1__Impl
	rule__Column__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getLeftParenthesisKeyword_1()); }
	'('
	{ after(grammarAccess.getColumnAccess().getLeftParenthesisKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__2__Impl
	rule__Column__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getGroup_2()); }
	(rule__Column__Group_2__0)?
	{ after(grammarAccess.getColumnAccess().getGroup_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__3__Impl
	rule__Column__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getAsKeyword_3()); }
	'as'
	{ after(grammarAccess.getColumnAccess().getAsKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__4__Impl
	rule__Column__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getNameAssignment_4()); }
	(rule__Column__NameAssignment_4)
	{ after(grammarAccess.getColumnAccess().getNameAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getRightParenthesisKeyword_5()); }
	')'
	{ after(grammarAccess.getColumnAccess().getRightParenthesisKeyword_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Column__Group_2__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_2__0__Impl
	rule__Column__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_2__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getIndexKeyword_2_0()); }
	'index'
	{ after(grammarAccess.getColumnAccess().getIndexKeyword_2_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_2__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Column__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__Group_2__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getColumnAccess().getIndexAssignment_2_1()); }
	(rule__Column__IndexAssignment_2_1)
	{ after(grammarAccess.getColumnAccess().getIndexAssignment_2_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EInt__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__0__Impl
	rule__EInt__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEIntAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EInt__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EInt__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
	RULE_INT
	{ after(grammarAccess.getEIntAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__IntVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntVariable__Group__0__Impl
	rule__IntVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntVariableAccess().getIntVariableAction_0()); }
	()
	{ after(grammarAccess.getIntVariableAccess().getIntVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntVariable__Group__1__Impl
	rule__IntVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntVariableAccess().getIntKeyword_1()); }
	'int'
	{ after(grammarAccess.getIntVariableAccess().getIntKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntVariable__Group__2__Impl
	rule__IntVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntVariableAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getIntVariableAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntVariable__Group__3__Impl
	rule__IntVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntVariableAccess().getInitialValueAssignment_3()); }
	(rule__IntVariable__InitialValueAssignment_3)?
	{ after(grammarAccess.getIntVariableAccess().getInitialValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__IntVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getIntVariableAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getIntVariableAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__StringVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__0__Impl
	rule__StringVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getStringVariableAction_0()); }
	()
	{ after(grammarAccess.getStringVariableAccess().getStringVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__1__Impl
	rule__StringVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getStrKeyword_1()); }
	'str'
	{ after(grammarAccess.getStringVariableAccess().getStrKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__2__Impl
	rule__StringVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getStringVariableAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__3__Impl
	rule__StringVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getInitialValueAssignment_3()); }
	(rule__StringVariable__InitialValueAssignment_3)?
	{ after(grammarAccess.getStringVariableAccess().getInitialValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__StringVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getStringVariableAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getStringVariableAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__DoubleVariable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleVariable__Group__0__Impl
	rule__DoubleVariable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleVariableAccess().getDoubleVariableAction_0()); }
	()
	{ after(grammarAccess.getDoubleVariableAccess().getDoubleVariableAction_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleVariable__Group__1__Impl
	rule__DoubleVariable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleVariableAccess().getDoubleKeyword_1()); }
	'double'
	{ after(grammarAccess.getDoubleVariableAccess().getDoubleKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleVariable__Group__2__Impl
	rule__DoubleVariable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleVariableAccess().getLeftParenthesisKeyword_2()); }
	'('
	{ after(grammarAccess.getDoubleVariableAccess().getLeftParenthesisKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleVariable__Group__3__Impl
	rule__DoubleVariable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleVariableAccess().getInitialValueAssignment_3()); }
	(rule__DoubleVariable__InitialValueAssignment_3)?
	{ after(grammarAccess.getDoubleVariableAccess().getInitialValueAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__DoubleVariable__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getDoubleVariableAccess().getRightParenthesisKeyword_4()); }
	')'
	{ after(grammarAccess.getDoubleVariableAccess().getRightParenthesisKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__0__Impl
	rule__EDouble__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__1__Impl
	rule__EDouble__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
	(RULE_INT)?
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__2__Impl
	rule__EDouble__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
	'.'
	{ after(grammarAccess.getEDoubleAccess().getFullStopKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__3__Impl
	rule__EDouble__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getGroup_4()); }
	(rule__EDouble__Group_4__0)?
	{ after(grammarAccess.getEDoubleAccess().getGroup_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__EDouble__Group_4__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__0__Impl
	rule__EDouble__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
	(rule__EDouble__Alternatives_4_0)
	{ after(grammarAccess.getEDoubleAccess().getAlternatives_4_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__1__Impl
	rule__EDouble__Group_4__2
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
	('-')?
	{ after(grammarAccess.getEDoubleAccess().getHyphenMinusKeyword_4_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__EDouble__Group_4__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EDouble__Group_4__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
	RULE_INT
	{ after(grammarAccess.getEDoubleAccess().getINTTerminalRuleCall_4_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Program__CsvFileAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getCsvFileDataFileParserRuleCall_0_0()); }
		ruleDataFile
		{ after(grammarAccess.getProgramAccess().getCsvFileDataFileParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ChartAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getChartChartParserRuleCall_1_0()); }
		ruleChart
		{ after(grammarAccess.getProgramAccess().getChartChartParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__ChartAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getChartChartParserRuleCall_2_0()); }
		ruleChart
		{ after(grammarAccess.getProgramAccess().getChartChartParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__TitleAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getTitleEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getChartAccess().getTitleEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__TypeAssignment_4_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getTypeChartTypeEnumRuleCall_4_1_0()); }
		ruleChartType
		{ after(grammarAccess.getChartAccess().getTypeChartTypeEnumRuleCall_4_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__XVariableAssignment_5_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getXVariableColumnRefParserRuleCall_5_1_0()); }
		ruleColumnRef
		{ after(grammarAccess.getChartAccess().getXVariableColumnRefParserRuleCall_5_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__XVariableAssignment_5_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getXVariableColumnRefParserRuleCall_5_2_0()); }
		ruleColumnRef
		{ after(grammarAccess.getChartAccess().getXVariableColumnRefParserRuleCall_5_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__YVariableAssignment_6_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getYVariableColumnRefParserRuleCall_6_1_0()); }
		ruleColumnRef
		{ after(grammarAccess.getChartAccess().getYVariableColumnRefParserRuleCall_6_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__YVariableAssignment_6_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getYVariableColumnRefParserRuleCall_6_2_0()); }
		ruleColumnRef
		{ after(grammarAccess.getChartAccess().getYVariableColumnRefParserRuleCall_6_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__FilterAssignment_7_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getFilterConditionParserRuleCall_7_1_0()); }
		ruleCondition
		{ after(grammarAccess.getChartAccess().getFilterConditionParserRuleCall_7_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Chart__FilterAssignment_7_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getChartAccess().getFilterConditionParserRuleCall_7_2_0()); }
		ruleCondition
		{ after(grammarAccess.getChartAccess().getFilterConditionParserRuleCall_7_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__FilePathAssignment_0_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFileAccess().getFilePathEStringParserRuleCall_0_3_0()); }
		ruleEString
		{ after(grammarAccess.getDataFileAccess().getFilePathEStringParserRuleCall_0_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__HasHeaderAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFileAccess().getHasHeaderEBooleanParserRuleCall_1_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getDataFileAccess().getHasHeaderEBooleanParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__HasTypeAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFileAccess().getHasTypeEBooleanParserRuleCall_2_1_0()); }
		ruleEBoolean
		{ after(grammarAccess.getDataFileAccess().getHasTypeEBooleanParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__SeparatorAssignment_3_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFileAccess().getSeparatorEStringParserRuleCall_3_1_0()); }
		ruleEString
		{ after(grammarAccess.getDataFileAccess().getSeparatorEStringParserRuleCall_3_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__UsedColumnAssignment_7
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFileAccess().getUsedColumnColumnParserRuleCall_7_0()); }
		ruleColumn
		{ after(grammarAccess.getDataFileAccess().getUsedColumnColumnParserRuleCall_7_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DataFile__UsedColumnAssignment_8_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDataFileAccess().getUsedColumnColumnParserRuleCall_8_1_0()); }
		ruleColumn
		{ after(grammarAccess.getDataFileAccess().getUsedColumnColumnParserRuleCall_8_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ColumnRef__MakeRefToAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnRefAccess().getMakeRefToColumnCrossReference_0()); }
		(
			{ before(grammarAccess.getColumnRefAccess().getMakeRefToColumnEStringParserRuleCall_0_1()); }
			ruleEString
			{ after(grammarAccess.getColumnRefAccess().getMakeRefToColumnEStringParserRuleCall_0_1()); }
		)
		{ after(grammarAccess.getColumnRefAccess().getMakeRefToColumnCrossReference_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__LeftElementAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getLeftElementColumnRefParserRuleCall_0_0()); }
		ruleColumnRef
		{ after(grammarAccess.getConditionAccess().getLeftElementColumnRefParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__OperatorAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getOperatorCompOperatorEnumRuleCall_1_0()); }
		ruleCompOperator
		{ after(grammarAccess.getConditionAccess().getOperatorCompOperatorEnumRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Condition__RightElementAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getConditionAccess().getRightElementConstantParserRuleCall_2_0()); }
		ruleConstant
		{ after(grammarAccess.getConditionAccess().getRightElementConstantParserRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__IndexAssignment_2_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getIndexEIntParserRuleCall_2_1_0()); }
		ruleEInt
		{ after(grammarAccess.getColumnAccess().getIndexEIntParserRuleCall_2_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Column__NameAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_4_0()); }
		ruleEString
		{ after(grammarAccess.getColumnAccess().getNameEStringParserRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__IntVariable__InitialValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getIntVariableAccess().getInitialValueEIntParserRuleCall_3_0()); }
		ruleEInt
		{ after(grammarAccess.getIntVariableAccess().getInitialValueEIntParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__StringVariable__InitialValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getStringVariableAccess().getInitialValueEStringParserRuleCall_3_0()); }
		ruleEString
		{ after(grammarAccess.getStringVariableAccess().getInitialValueEStringParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__DoubleVariable__InitialValueAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getDoubleVariableAccess().getInitialValueEDoubleParserRuleCall_3_0()); }
		ruleEDouble
		{ after(grammarAccess.getDoubleVariableAccess().getInitialValueEDoubleParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
